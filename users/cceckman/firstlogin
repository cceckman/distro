#!/bin/bash -i
# firstlogin for cceckman. Set up home, etc.
# This should mostly / probably work on platforms other than Arch.

f=common/installaur.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/kvpf.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/prompt.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }

gh_username="cceckman"

promptfile="$1"
echo "Using data from $promptfile..."

# Enable sudo mode for future commands.
sudo touch /tmp/foo

pushd $HOME # Make sure we have a good point of reference.

# TODO Make sure active SSH credentials work for Github; prompt to make new ones
# or not depending on what's available.
if [ "$(pfget "$promptfile" "genkey")" == y* ]
then
  echo "Generating new SSH credentials..."
  edkey=
  ssh-keygen -t ed25519 -f "$HOME/.ssh/id_ed25519" -C "$USER $(hostname)" -o -a 100
  ssh-keygen -t rsa -b 4096 -f $HOME/.ssh/id_rsa -C "$USER $(hostname)" -o -a 100

  # Attempt to POST to github.
  keyreq='/tmp/keyreq'
  cat - << HRD > $keyreq
{
  "title": "$USER@$(hostname)",
  "key": "$(cat $HOME/.ssh/id_rsa.pub)"
}
HRD
  for i in 1 2 3
  do
    prompt "Enter a Github authentication token for ${gh_username}:"
    read token

    {
      curl -X POST -d @$keyreq -u ${gh_username}:${token} https://api.github.com/user/keys \
      && { echo "Upload successful!"; break; } 
    } || { 
      echo "Didn't upload Github key! Let's retry.";
    }
  done
else
  echo "Skipping new SSH credentials..."
fi



# Tilde repository gets special treatment.
(git clone git@github.com:cceckman/Tilde.git Tilde 2>&1 || exit $? ) && \
  mv Tilde/.git . && rm -rf Tilde && git reset --hard && \
  git submodule update --recursive --init

# And then use the acquired script to get the latest.
$HOME/scripts/update-repos || exit $?


# My magic for a random list of lowercase characters:
# python -c 'import random; import string; ls = list(string.ascii_lowercase); random.shuffle(ls); print("".join(ls))'
s='pmwrovsxncbtlqgdejiyahkzuf'
a='abcdefghijklmnopqrstuvwxyz'
git config --global user.email $(echo 'wxpjtoi@wwowblpq.wgl' | tr $s $a)
# Yes; just obfuscated, not encrypted.
git config --global user.name "Charles Eckman"
git config --global core.editor "vim"
git config --global diff.tool "meld"

popd # $HOME

# Install AUR packages as user, so that we aren't installing as root.
installaur $(cat users/$USER/aurpkgs) || {
  >&2 echo "Could not install some AUR packages: code $?" && exit 3;
}

exit $?
