#!/bin/bash -i
# Ambroix for GCE
# Prompt for local and remote settings.

PLATFORM='gce'

echo "Prompting for information about '$PLATFORM'..."
promptfile="$1"
echo "Storing in promptfile $promptfile."


# Collect plugins
f=common/depend.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/yesno.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/kvpf.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/prompt.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/err.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }

_GcloudOrErr(){
  results=$( $@ ) || {
    ret=$?
    err "Error code $ret return from command '$1'"
    return $ret
  }
  echo "$results"
  return $ret
}
# Prints just the name of the entity.
_gcfmt="--format csv[no-heading](name)"

while true
do
  echo "Here are the current named configurations for gcloud:"
  gcloud config configurations list

  if yesno "Is the one you want to use active?"
  then
    # TODO: Perform validation, e.g. that fields are populated;
    # Break (only) on success.
    break
  fi
  echo "Please use this shell to generate and activate a gcloud configuration" \
    "to use for Ambroix. "
  echo "'gcloud help config configurations' may help."
  echo "You may terminate Ambroix by exiting with a non-zero status."
  $SHELL  || {
    ret=$?
    err "Shell exited with status $ret; stopping Ambroix."
    exit $ret
  }
done

# Machine name
while true
do
  prompt "What would you like the new instance named?"
  read instance
  ## Check if there's already a machine with that name in the project.
  instances=$(_GcloudOrErr "gcloud $_gcfmt compute instances list $instance") || {
    exit $?
  }
  if [[ "$instances" == "" ]]
  then
    pfset "$promptfile" "instance" "$instance" && echo "Instance '$instance' OK."
    break
  else
    err "Machine name '$instance' appears to be in use. Please select another."
  fi
done

# Image
while true
do
  if yesno "Would you like to use an existing Arch image?"
  then
    while true
    do
      echo "Existing images: "
      echo "$(_GcloudOrErr 'gcloud compute images list')" || {
        result="$?"
        err "Could not get images from your project!"
        exit $result
      }
      prompt "Please select an Arch image:"
      read imgname
      images=$(_GcloudOrErr "gcloud $_gcfmt compute images list $imgname") || {
        result="$?"
        err "Could not get images from your project!"
        err "$images"
        exit $result
      }
      if ! [[ "$images" == "$imgname" ]]
      then
        err "Existing image $imgname not found."
        err "Please provide the name of an image in your project, or add a new image to your project."
      else
        pfset "$promptfile" "image" "$imgname" && echo "Image '$imgname' found."
        break 2
      fi
    done
  else
    # TODO Support building a new image.
    err "Building a new image is not yet supported."
  fi
done

echo "Collected information about '$PLATFORM'!"
