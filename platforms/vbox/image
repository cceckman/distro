#!/bin/bash -i
# Ambroix for VirtualBox
# Image the target machine.

# Collect plugins
f=common/err.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/kvpf.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }
f=common/setfirstboot.fn.sh; source $f || { >&2 echo "$f not found!" && exit 2; }

promptfile="$1"
echo "Using data from $promptfile..."

disk="$(pfget "$promptfile" "disk")"
name="$(pfget "$promptfile" "hostname")"
echo "Drive: $disk"
echo "Name: $name"
echo "Hit enter to start!"
read

set -e
for sig in INT TERM; do
  trap "echo 'Encountered an error! Dropping into bash.' && bash; [[ $sig == EXIT ]] || (trap - $sig EXIT; kill -$sig $$)" $sig 
done

set -x

# Turn on some base services: 
timedatectl set-ntp true # enable NTP-based time.

# Set up the disk: use GPT (rather than MBR); leave 1MiB for GRUB; and leave 8GB for swap.
parted --script $disk mklabel gpt || exit
parted --script --align optimal $disk -- mkpart primary 0% 1M set 1 bios_grub on name 1 grub || exit
parted --script --align optimal $disk -- mkpart primary ext4 1M -8GiB name 2 root || exit
parted --script --align optimal $disk -- mkpart primary linux-swap -8GiB 100% name 3 swap || exit

# Format root partition and swap
mkfs -t ext4 ${disk}2 && mount ${disk}2 /mnt || exit
mkswap ${disk}3 && swapon ${disk}3 || exit

# Update mirror list and package DB. This isn't the most optimal assignment, but good enough till we get really started.
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup # back up mirror list
curl -o - 'https://www.archlinux.org/mirrorlist/?country=US&protocol=https&ip_version=4&ip_version=6&use_mirror_status=on' | sed 's/#Server/Server/' > /tmp/mirrorlist
rankmirrors -n 10 /tmp/mirrorlist > /etc/pacman.d/mirrorlist # only grab top 10 mirrors

# Install...
pacstrap /mnt base $ADDL_PKGS || exit
# Wait...

# Generate /etc/fstab for actual booting.
genfstab -p /mnt >> /mnt/etc/fstab || exit

pfget "$promptfile" hostname > /mnt/etc/hostname

# Install some additional packages
arch-chroot /mnt \
  pacman-key --refresh-keys
arch-chroot /mnt \
  pacman --noconfirm -Sy \
    linux-headers virtualbox-guest-utils virtualbox-guest-dkms linux-headers \
    grub \
    fping 

mkdir -p /mnt/usr/bin/ && \
 cp platforms/vbox/image.chroot.sh /mnt/usr/bin/initimage.sh && \
 chmod +x /mnt/usr/bin/initimage.sh && \
 arch-chroot /mnt /usr/bin/initimage.sh

# Within the chroot, set up user
pfget "$promptfile" pass \
| arch-chroot /mnt useradd \
  --expiredate "1970-01-01" \
  --create-home \
  --user-group \
  --groups wheel \
  $TGT_USER
arch-chroot /mnt passwd -e root

# Image initialized; now set up firstboot.
setfirstboot /mnt

sync
umount ${disk}2
swapoff ${disk}3

echo "All done! Reboot to start the VM."
trap - EXIT && exit 0
